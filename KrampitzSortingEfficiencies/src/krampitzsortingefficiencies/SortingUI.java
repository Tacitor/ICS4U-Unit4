/*
 * Lukas Krampitz
 * Oct 22, 2020
 * A program which allows the user to compare the efficiency to two different sorting algorithms
 */
package krampitzsortingefficiencies;

/**
 *
 * @author Tacitor
 */
public class SortingUI extends javax.swing.JFrame {
    
    private static int numSort;
    private static int sortType;
    private static boolean ascendSort;

    /**
     * Creates new form SortingUI
     */
    public SortingUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numSortGrp = new javax.swing.ButtonGroup();
        orderGrp = new javax.swing.ButtonGroup();
        titleLbl = new javax.swing.JLabel();
        numSortLbl = new javax.swing.JLabel();
        num10Btn = new javax.swing.JRadioButton();
        num10000Btn = new javax.swing.JRadioButton();
        sortTypeLbl = new javax.swing.JLabel();
        sortTypeBox = new javax.swing.JComboBox<>();
        orderLbl = new javax.swing.JLabel();
        ascendingRbtn = new javax.swing.JRadioButton();
        descendingRbtn = new javax.swing.JRadioButton();
        SortBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sorting Comparison");
        setAlwaysOnTop(true);

        titleLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        titleLbl.setText("Sorting Efficiencies");

        numSortLbl.setText("Amount of numbers to sort:");

        numSortGrp.add(num10Btn);
        num10Btn.setSelected(true);
        num10Btn.setText("10");

        numSortGrp.add(num10000Btn);
        num10000Btn.setText("10,000");

        sortTypeLbl.setText("Selected Sorting Algorithm:");

        sortTypeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selection Sort", "Bubble Sort", "Insertion Sort", "Quik Sort" }));

        orderLbl.setText("Sort Order:");

        orderGrp.add(ascendingRbtn);
        ascendingRbtn.setSelected(true);
        ascendingRbtn.setText("Ascending");

        orderGrp.add(descendingRbtn);
        descendingRbtn.setText("Descending");

        SortBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SortBtn.setText("Sort");
        SortBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(113, 113, 113)
                            .addComponent(titleLbl))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(numSortLbl)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(num10Btn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(num10000Btn))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(sortTypeLbl)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(sortTypeBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(SortBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(orderLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ascendingRbtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(descendingRbtn)))))
                .addContainerGap(753, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numSortLbl)
                    .addComponent(num10Btn)
                    .addComponent(num10000Btn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortTypeLbl)
                    .addComponent(sortTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderLbl)
                    .addComponent(ascendingRbtn)
                    .addComponent(descendingRbtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SortBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(333, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SortBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortBtnActionPerformed
        // TODO add your handling code here:
        //get all the sorting type data
        if (num10Btn.isSelected()) {
            numSort = 10;
        } else {
            numSort = 10000;
        }
        
        if (ascendingRbtn.isSelected()) {
            ascendSort = true;
        } else {
            ascendSort = false;
        }
        
        sortType = sortTypeBox.getSelectedIndex();
        
        System.out.println("Algorithm: " + sortType + "\nNumber: " + numSort + "\nAscending? : " + ascendSort);
    }//GEN-LAST:event_SortBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SortingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SortingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SortingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SortingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SortingUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SortBtn;
    private javax.swing.JRadioButton ascendingRbtn;
    private javax.swing.JRadioButton descendingRbtn;
    private javax.swing.JRadioButton num10000Btn;
    private javax.swing.JRadioButton num10Btn;
    private javax.swing.ButtonGroup numSortGrp;
    private javax.swing.JLabel numSortLbl;
    private javax.swing.ButtonGroup orderGrp;
    private javax.swing.JLabel orderLbl;
    private javax.swing.JComboBox<String> sortTypeBox;
    private javax.swing.JLabel sortTypeLbl;
    private javax.swing.JLabel titleLbl;
    // End of variables declaration//GEN-END:variables
}
